---
- name: Upgrade Valtix Gateways
  hosts: localhost
  gather_facts: no

  vars_prompt:
    - name: environment
      prompt: "Enter environment (dev, preprod, prod)"
      private: no
    - name: cloud_provider
      prompt: "Enter cloud provider (aws, azure, gcp)"
      private: no
    - name: api_url
      prompt: "Enter API URL for the selected environment & cloud"
      private: no
    - name: api_key
      prompt: "Enter API Key"
      private: yes
    - name: target_version
      prompt: "Enter target upgrade version (e.g., 24.06.02)"
      private: no

  tasks:
    - name: Load gateway inventory for selected environment & cloud
      include_vars:
        file: "inventories/{{ environment }}/{{ cloud_provider }}.yml"
      register: gateway_data

    - name: Validate Inventory File
      fail:
        msg: "No gateways found in inventory for {{ environment }} - {{ cloud_provider }}"
      when: gateway_data.ansible_facts.gateways is not defined or gateway_data.ansible_facts.gateways | length == 0

    - name: Fetch Current Version for Each Gateway
      uri:
        url: "{{ api_url }}/gateways/{{ item }}/status"
        method: GET
        headers:
          Authorization: "Bearer {{ api_key }}"
          Content-Type: "application/json"
        status_code: [200]
      register: gateway_status
      loop: "{{ gateway_data.ansible_facts.gateways }}"
      ignore_errors: yes

    - name: Filter Gateways for Upgrade
      set_fact:
        upgrade_gateways: "{{ gateway_status.results | rejectattr('json.version', 'equalto', target_version) | map(attribute='item') | list }}"
        skipped_gateways: "{{ gateway_status.results | selectattr('json.version', 'equalto', target_version) | map(attribute='item') | list }}"

    - name: Show Skipped Gateways
      debug:
        msg: "⚠️ Skipping {{ item }} as it is already on version {{ target_version }}"
      loop: "{{ skipped_gateways }}"
      when: skipped_gateways | length > 0

    - name: Upgrade Gateways that Need Upgrading
      uri:
        url: "{{ api_url }}/gateways/{{ item }}/upgrade"
        method: POST
        headers:
          Authorization: "Bearer {{ api_key }}"
          Content-Type: "application/json"
        body_format: json
        body:
          target_version: "{{ target_version }}"
        status_code: [200, 202]
      register: upgrade_results
      loop: "{{ upgrade_gateways }}"
      ignore_errors: yes

    - name: Categorize Upgrade Results
      set_fact:
        success_upgrades: "{{ upgrade_results.results | selectattr('status', 'equalto', 200) | map(attribute='item') | list }}"
        pending_upgrades: "{{ upgrade_results.results | selectattr('status', 'equalto', 202) | map(attribute='item') | list }}"
        failed_upgrades: "{{ upgrade_results.results | rejectattr('status', 'in', [200, 202]) | map(attribute='item') | list }}"

    - name: Show Upgrade Summary
      debug:
        msg:
          - "✅ Successful Upgrades: {{ success_upgrades | default([]) }}"
          - "⏳ Pending Upgrades: {{ pending_upgrades | default([]) }}"
          - "❌ Failed Upgrades: {{ failed_upgrades | default([]) }}"
          - "⚠️ Skipped Upgrades (Already on Target Version): {{ skipped_gateways | default([]) }}"
